{
  "wrapper": "plaintext",
  "text": "Hi there, on Solr 6.6.0, using the built-in \"techproducts\" example:\n\nbin/solr start -f -e techproducts\n\nI can successfully search with URL-based bq as shown in the URL (bq setting\nin *bold*) below:\n\nhttp://localhost:8983/solr/techproducts/select?\n*bq={!complexphrase%20inOrder=true%20df=name}%22${q}%22*\n&debugQuery=on&defType=edismax&fl=*,score&indent=on&q=iPod%20Mini&wt=json\n\nwhere I see the expected ComplexPhraseQuery expression in the parsed query:\n\n\"parsedquery\":\"(+(DisjunctionMaxQuery((text:ipod))\nDisjunctionMaxQuery((text:mini))) *ComplexPhraseQuery(\\\"iPod Mini\\\")*\n)/no_coord\"\n\nHowever, *I have been unable to accomplish the same query using a search\nhandler *in solrconfig.xml, as shown below:\n\n  <requestHandler name=\"/search_by_name_phrase\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">ALL</str>\n      <int name=\"rows\">10</int>\n\n      <!-- Query parser -->\n      <str name=\"defType\">edismax</str>\n\n      <!-- Query fields -->\n      <str name=\"qf\">name</str>\n\n      <!-- Fields list -->\n      <str name=\"fl\">name, score</str>\n\n      <!-- Boost matching the search terms in order in name -->\n      <!-- Error: org.apache.solr.common.SolrException: No system property\nor default value specified for q value:{!complexphrase inOrder=true\ndf=name}\"${q}\"-->\n      <str name=\"bq\">*{!complexphrase inOrder=true df=name}\"${q}\"*</str>\n\n      <!-- Escaping does not work either. Not sure I have the proper\nescaping syntax. -->\n      <!--<str name=\"bq\">{!complexphrase inOrder=true\ndf=name}\"\\\\$\\\\{q\\\\}\"</str>-->\n    </lst>\n  </requestHandler>\n\nThe expression <str name=\"bq\">{!complexphrase inOrder=true\ndf=name}\"${q}\"</str> errors out when loading solrconfig.xml with the\nfollowing error:\n\nError: org.apache.solr.common.SolrException: No system property or default\nvalue specified for q value:{!complexphrase inOrder=true df=name}\"${q}\"\n\nas if Solr is looking for a Java property \"q\"!?\n\nThe variation shows below without the macro expansion, but assuming a\nnormal localParam substitution, seems to be taking \"$q\" as a literate:\n\nSetting:\n      <str name=\"bq\">{!complexphrase inOrder=true}name:\"$q\"</str>\nProduces:\n      \"parsedquery\":\"(+(DisjunctionMaxQuery((name:ipod))\nDisjunctionMaxQuery((name:mini))) *ComplexPhraseQuery(\\\"$q\\\")*)/no_coord\"\n\nThe variation with an attempt to escape the macro expansion does not work\neither:\n\nSetting:\n      <str name=\"bq\">{!complexphrase inOrder=true df=name}\"\\\\$\\\\{q\\\\}\"</str>\nProduces:\n      \"parsedquery\":\"(+(DisjunctionMaxQuery((name:ipod))\nDisjunctionMaxQuery((name:mini)))* ComplexPhraseQuery(\\\"\\\\$\\\\{q\\\\}\\\"))*\n/no_coord\"\n\nAlso, the following variations do *not* produce the expected\nComplexPhraseQuery statement in the parsed query:\nSettings:\n      <str name=\"bq\">{!complexphrase inOrder=true}name:$q</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name}$q</str>\n      <str name=\"bq\">{!complexphrase inOrder=true}name:($q)</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name}($q)</str>\n      <str name=\"bq\">{!complexphrase inOrder=true}name:\\\"$q\\\"</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name}\\\"$q\\\"</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name v=\"$q\"}</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name v=\\\"$q\\\"}</str>\nProduces:\n      \"parsedquery\":\"(+(DisjunctionMaxQuery((name:ipod))\nDisjunctionMaxQuery((name:mini))) *name:q*)/no_coord\"\n\nAnd finally, also not producing the expected ComplexPhraseQuery statement:\nSetting:\n      <str name=\"bq\">{!complexphrase inOrder=true df=name v=$q}</str>\nProduces:\n      \"parsedquery\":\"(+(DisjunctionMaxQuery((name:ipod))\nDisjunctionMaxQuery((name:mini))) *(name:ipod name:mini)*)/no_coord\"\n\nThe documentation for ComplexPhraseQuery\n<https://lucene.apache.org/solr/guide/6_6/other-parsers.html#other-parsers>\nstipulates\nsome required \"escaping\": Special care has to be given when escaping:\nclauses between double quotes (usually whole query) is parsed twice, these\nparts have to be escaped as twice. eg \"foo\\\\: bar\\\\^\"\n\nhence, it is possible that I have not used the proper escaping syntax.\n\nIt is troubling that I cannot use the same URL parameter expression in a\nsearch handler to accomplish the same effect, a strong assumption of mine\nin how Solr can be used.\n\nAny suggestion, comment, or similar experience? Does it look like a bug?\n\nThank you,\nBertrand\n\n",
  "denotations": [
    {
      "id": 1,
      "start": 0,
      "end": 9,
      "text": "Hi there,",
      "type": "Body/Intro",
      "meta": null
    },
    {
      "id": 2,
      "start": 4337,
      "end": 4358,
      "text": "\nThank you,\nBertrand\n",
      "type": "Body/Outro",
      "meta": null
    },
    {
      "id": 3,
      "start": 0,
      "end": 4359,
      "text": "Hi there, on Solr 6.6.0, using the built-in \"techproducts\" example:\n\nbin/solr start -f -e techproducts\n\nI can successfully search with URL-based bq as shown in the URL (bq setting\nin *bold*) below:\n\nhttp://localhost:8983/solr/techproducts/select?\n*bq={!complexphrase%20inOrder=true%20df=name}%22${q}%22*\n&debugQuery=on&defType=edismax&fl=*,score&indent=on&q=iPod%20Mini&wt=json\n\nwhere I see the expected ComplexPhraseQuery expression in the parsed query:\n\n\"parsedquery\":\"(+(DisjunctionMaxQuery((text:ipod))\nDisjunctionMaxQuery((text:mini))) *ComplexPhraseQuery(\\\"iPod Mini\\\")*\n)/no_coord\"\n\nHowever, *I have been unable to accomplish the same query using a search\nhandler *in solrconfig.xml, as shown below:\n\n  <requestHandler name=\"/search_by_name_phrase\" class=\"solr.SearchHandler\">\n    <lst name=\"defaults\">\n      <str name=\"echoParams\">ALL</str>\n      <int name=\"rows\">10</int>\n\n      <!-- Query parser -->\n      <str name=\"defType\">edismax</str>\n\n      <!-- Query fields -->\n      <str name=\"qf\">name</str>\n\n      <!-- Fields list -->\n      <str name=\"fl\">name, score</str>\n\n      <!-- Boost matching the search terms in order in name -->\n      <!-- Error: org.apache.solr.common.SolrException: No system property\nor default value specified for q value:{!complexphrase inOrder=true\ndf=name}\"${q}\"-->\n      <str name=\"bq\">*{!complexphrase inOrder=true df=name}\"${q}\"*</str>\n\n      <!-- Escaping does not work either. Not sure I have the proper\nescaping syntax. -->\n      <!--<str name=\"bq\">{!complexphrase inOrder=true\ndf=name}\"\\\\$\\\\{q\\\\}\"</str>-->\n    </lst>\n  </requestHandler>\n\nThe expression <str name=\"bq\">{!complexphrase inOrder=true\ndf=name}\"${q}\"</str> errors out when loading solrconfig.xml with the\nfollowing error:\n\nError: org.apache.solr.common.SolrException: No system property or default\nvalue specified for q value:{!complexphrase inOrder=true df=name}\"${q}\"\n\nas if Solr is looking for a Java property \"q\"!?\n\nThe variation shows below without the macro expansion, but assuming a\nnormal localParam substitution, seems to be taking \"$q\" as a literate:\n\nSetting:\n      <str name=\"bq\">{!complexphrase inOrder=true}name:\"$q\"</str>\nProduces:\n      \"parsedquery\":\"(+(DisjunctionMaxQuery((name:ipod))\nDisjunctionMaxQuery((name:mini))) *ComplexPhraseQuery(\\\"$q\\\")*)/no_coord\"\n\nThe variation with an attempt to escape the macro expansion does not work\neither:\n\nSetting:\n      <str name=\"bq\">{!complexphrase inOrder=true df=name}\"\\\\$\\\\{q\\\\}\"</str>\nProduces:\n      \"parsedquery\":\"(+(DisjunctionMaxQuery((name:ipod))\nDisjunctionMaxQuery((name:mini)))* ComplexPhraseQuery(\\\"\\\\$\\\\{q\\\\}\\\"))*\n/no_coord\"\n\nAlso, the following variations do *not* produce the expected\nComplexPhraseQuery statement in the parsed query:\nSettings:\n      <str name=\"bq\">{!complexphrase inOrder=true}name:$q</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name}$q</str>\n      <str name=\"bq\">{!complexphrase inOrder=true}name:($q)</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name}($q)</str>\n      <str name=\"bq\">{!complexphrase inOrder=true}name:\\\"$q\\\"</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name}\\\"$q\\\"</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name v=\"$q\"}</str>\n      <str name=\"bq\">{!complexphrase inOrder=true df=name v=\\\"$q\\\"}</str>\nProduces:\n      \"parsedquery\":\"(+(DisjunctionMaxQuery((name:ipod))\nDisjunctionMaxQuery((name:mini))) *name:q*)/no_coord\"\n\nAnd finally, also not producing the expected ComplexPhraseQuery statement:\nSetting:\n      <str name=\"bq\">{!complexphrase inOrder=true df=name v=$q}</str>\nProduces:\n      \"parsedquery\":\"(+(DisjunctionMaxQuery((name:ipod))\nDisjunctionMaxQuery((name:mini))) *(name:ipod name:mini)*)/no_coord\"\n\nThe documentation for ComplexPhraseQuery\n<https://lucene.apache.org/solr/guide/6_6/other-parsers.html#other-parsers>\nstipulates\nsome required \"escaping\": Special care has to be given when escaping:\nclauses between double quotes (usually whole query) is parsed twice, these\nparts have to be escaped as twice. eg \"foo\\\\: bar\\\\^\"\n\nhence, it is possible that I have not used the proper escaping syntax.\n\nIt is troubling that I cannot use the same URL parameter expression in a\nsearch handler to accomplish the same effect, a strong assumption of mine\nin how Solr can be used.\n\nAny suggestion, comment, or similar experience? Does it look like a bug?\n\nThank you,\nBertrand\n\n",
      "type": "Body",
      "meta": null
    }
  ],
  "meta": {},
  "id": "train/train_5879"
}