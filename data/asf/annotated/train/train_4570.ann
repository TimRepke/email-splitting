{
  "wrapper": "plaintext",
  "text": "Hi Furkan,\n\nNo, In the schema we also defined some static fields such as uri and geo\nfield.\n\nOn 5 July 2017 at 17:07, Furkan KAMACI <furkankamaci@gmail.com> wrote:\n\n> Hi Thaer,\n>\n> Do you use schemeless mode [1] ?\n>\n> Kind Regards,\n> Furkan KAMACI\n>\n> [1] https://cwiki.apache.org/confluence/display/solr/Schemaless+Mode\n>\n> On Wed, Jul 5, 2017 at 4:23 PM, Thaer Sammar <t.sammar@geophy.com> wrote:\n>\n> > Hi,\n> > We are trying to index documents of different types. Document have\n> > different fields. fields are known at indexing time. We run a query on a\n> > database and we index what comes using query variables as field names in\n> > solr. Our current solution: we use dynamic fields with prefix, for\n> example\n> > feature_i_*, the issue with that\n> > 1) we need to define the type of the dynamic field and to be able to\n> cover\n> > the type of discovered fields we define the following\n> > feature_i_* for integers, feature_t_* for string, feature_d_* for double,\n> > ....\n> > 1.a) this means we need to check the type of the discovered field and\n> then\n> > put in the corresponding dynamic field\n> > 2) at search time, we need to know the right prefix\n> > We are looking for help to find away to ignore the prefix and check of\n> the\n> > type\n> >\n> > regards,\n> > Thaer\n>\n\n",
  "denotations": [
    {
      "id": 1,
      "start": 0,
      "end": 11,
      "text": "Hi Furkan,\n",
      "type": "Body/Intro",
      "meta": null
    },
    {
      "id": 2,
      "start": 0,
      "end": 93,
      "text": "Hi Furkan,\n\nNo, In the schema we also defined some static fields such as uri and geo\nfield.\n\n",
      "type": "Body",
      "meta": null
    },
    {
      "id": 3,
      "start": 93,
      "end": 164,
      "text": "On 5 July 2017 at 17:07, Furkan KAMACI <furkankamaci@gmail.com> wrote:\n",
      "type": "Header",
      "meta": null
    },
    {
      "id": 4,
      "start": 164,
      "end": 177,
      "text": "\n> Hi Thaer,\n",
      "type": "Body/Intro",
      "meta": null
    },
    {
      "id": 5,
      "start": 214,
      "end": 248,
      "text": ">\n> Kind Regards,\n> Furkan KAMACI\n",
      "type": "Body/Outro",
      "meta": null
    },
    {
      "id": 6,
      "start": 164,
      "end": 323,
      "text": "\n> Hi Thaer,\n>\n> Do you use schemeless mode [1] ?\n>\n> Kind Regards,\n> Furkan KAMACI\n>\n> [1] https://cwiki.apache.org/confluence/display/solr/Schemaless+Mode\n>\n",
      "type": "Body",
      "meta": null
    },
    {
      "id": 7,
      "start": 323,
      "end": 399,
      "text": "> On Wed, Jul 5, 2017 at 4:23 PM, Thaer Sammar <t.sammar@geophy.com> wrote:\n",
      "type": "Header",
      "meta": null
    },
    {
      "id": 8,
      "start": 399,
      "end": 409,
      "text": ">\n> > Hi,\n",
      "type": "Body/Intro",
      "meta": null
    },
    {
      "id": 9,
      "start": 1248,
      "end": 1275,
      "text": "> >\n> > regards,\n> > Thaer\n",
      "type": "Body/Outro",
      "meta": null
    },
    {
      "id": 10,
      "start": 399,
      "end": 1278,
      "text": ">\n> > Hi,\n> > We are trying to index documents of different types. Document have\n> > different fields. fields are known at indexing time. We run a query on a\n> > database and we index what comes using query variables as field names in\n> > solr. Our current solution: we use dynamic fields with prefix, for\n> example\n> > feature_i_*, the issue with that\n> > 1) we need to define the type of the dynamic field and to be able to\n> cover\n> > the type of discovered fields we define the following\n> > feature_i_* for integers, feature_t_* for string, feature_d_* for double,\n> > ....\n> > 1.a) this means we need to check the type of the discovered field and\n> then\n> > put in the corresponding dynamic field\n> > 2) at search time, we need to know the right prefix\n> > We are looking for help to find away to ignore the prefix and check of\n> the\n> > type\n> >\n> > regards,\n> > Thaer\n>\n\n",
      "type": "Body",
      "meta": null
    }
  ],
  "meta": {},
  "id": "train/train_4570"
}