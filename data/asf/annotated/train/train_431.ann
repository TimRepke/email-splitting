{
  "wrapper": "plaintext",
  "text": "I know it works as expected when I set type_s:up as you describe. But I was expecting no children\nat all in my query.\n\nIn my real query I have a document with several children and thus can't specify a specific\ntype with childFilter. And I can't give back all children because some of them do not make\nany sense at all.\nAnd the problem appears for an intermediate node (which has children and which itself a child\nof another). \n\nFabien\n\n-----Original Message-----\nFrom: Mikhail Khludnev [mailto:mkhl@apache.org] \nSent: den 24 januari 2017 14:06\nTo: solr-user <solr-user@lucene.apache.org>\nSubject: Re: Indexing nested documents giving back unrelated parents when asking for children\n\nHello Fabien,\n\nI believe parentFilter should be type_s:up, and consequently the type_s:up should go in fq.\n\nOn Tue, Jan 24, 2017 at 3:30 PM, Fabien Renaud <fabien.renaud@findwise.com>\nwrote:\n\n> Hello,\n>\n> I'm wondering if I missed something in my code (which uses solrj 6.3):\n>\n> public class Main {\n>\n>     private SolrClient client1;\n>\n>     public void run() {\n>         client1 = new \n> HttpSolrClient.Builder(\"http://localhost:8983/solr\n> \").build();\n>\n>         SolrInputDocument doc1 = new SolrInputDocument();\n>\n>         doc1.addField(\"id\", \"1\");\n>         doc1.addField(\"type_s\", \"up\");\n>         SolrInputDocument doc2 = new SolrInputDocument();\n>\n>         doc2.addField(\"id\", \"2\");\n>         doc2.addField(\"type_s\", \"down\");\n>\n>         doc1.addChildDocument(doc2);\n>\n>         SolrInputDocument doc4 = new SolrInputDocument();\n>         doc4.addField(\"id\", \"4\");\n>         doc4.addField(\"type_s\", \"up\");\n>\n>         SolrInputDocument doc5 = new SolrInputDocument();\n>         doc5.addField(\"id\", \"5\");\n>         doc5.addField(\"type_s\", \"down\");\n>\n>         doc4.addChildDocument(doc5);\n>\n>         try {\n>             client1.add(\"techproducts\", Arrays.asList(doc1,doc4));\n>         } catch (Exception e) {\n>             System.out.println(\"Indexing failed\" + e);\n>         }\n>     }\n>\n> If I start Solr 6.3 using bin/start start -e techproduct and ask the\n> following:\n>\n> http://localhost:8983/solr/techproducts/select?fl=*,[\n> child%20parentFilter=type_s:down]&fq=type_s:down&indent=on&q=*:*&wt=js\n> on\n>\n>\n> then I get:\n>\n>     {\n>       \"docs\": [\n>         {\n>           \"id\": \"2\",\n>           \"type_s\": \"down\"\n>         },\n>         {\n>           \"id\": \"5\",\n>           \"type_s\": \"down\",\n>           \"_childDocuments_\": [\n>             {\n>               \"id\": \"1\",\n>               \"type_s\": \"up\"\n>             }\n>           ]\n>         }\n>       ]\n>     }\n>\n> which seems to be a bug for me. Or did I miss something?\n> Notice that the relations \"2 is a child of 1\" and \"5 is a child of 4\" \n> are working fine. It's just that I get extra (unwanted and unrelated) relations.\n>\n> Notice that at some point I manage to get back two documents with the \n> __same__ id (with different version). I'm not able to reproduce this \n> but I guess it could be related.\n>\n> Fabien\n>\n>\n\n\n--\nSincerely yours\nMikhail Khludnev\n",
  "denotations": [
    {
      "id": 1,
      "start": 427,
      "end": 435,
      "text": "\nFabien\n",
      "type": "Body/Outro",
      "meta": null
    },
    {
      "id": 2,
      "start": 0,
      "end": 436,
      "text": "I know it works as expected when I set type_s:up as you describe. But I was expecting no children\nat all in my query.\n\nIn my real query I have a document with several children and thus can't specify a specific\ntype with childFilter. And I can't give back all children because some of them do not make\nany sense at all.\nAnd the problem appears for an intermediate node (which has children and which itself a child\nof another). \n\nFabien\n\n",
      "type": "Body",
      "meta": null
    },
    {
      "id": 3,
      "start": 436,
      "end": 682,
      "text": "-----Original Message-----\nFrom: Mikhail Khludnev [mailto:mkhl@apache.org] \nSent: den 24 januari 2017 14:06\nTo: solr-user <solr-user@lucene.apache.org>\nSubject: Re: Indexing nested documents giving back unrelated parents when asking for children\n",
      "type": "Header",
      "meta": null
    },
    {
      "id": 4,
      "start": 682,
      "end": 697,
      "text": "\nHello Fabien,\n",
      "type": "Body/Intro",
      "meta": null
    },
    {
      "id": 5,
      "start": 682,
      "end": 791,
      "text": "\nHello Fabien,\n\nI believe parentFilter should be type_s:up, and consequently the type_s:up should go in fq.\n\n",
      "type": "Body",
      "meta": null
    },
    {
      "id": 6,
      "start": 791,
      "end": 874,
      "text": "On Tue, Jan 24, 2017 at 3:30 PM, Fabien Renaud <fabien.renaud@findwise.com>\nwrote:\n",
      "type": "Header",
      "meta": null
    },
    {
      "id": 7,
      "start": 874,
      "end": 884,
      "text": "\n> Hello,\n",
      "type": "Body/Intro",
      "meta": null
    },
    {
      "id": 8,
      "start": 2958,
      "end": 2969,
      "text": ">\n> Fabien\n",
      "type": "Body/Outro",
      "meta": null
    },
    {
      "id": 9,
      "start": 2975,
      "end": 3011,
      "text": "--\nSincerely yours\nMikhail Khludnev\n",
      "type": "Body/Outro",
      "meta": null
    },
    {
      "id": 10,
      "start": 874,
      "end": 3011,
      "text": "\n> Hello,\n>\n> I'm wondering if I missed something in my code (which uses solrj 6.3):\n>\n> public class Main {\n>\n>     private SolrClient client1;\n>\n>     public void run() {\n>         client1 = new \n> HttpSolrClient.Builder(\"http://localhost:8983/solr\n> \").build();\n>\n>         SolrInputDocument doc1 = new SolrInputDocument();\n>\n>         doc1.addField(\"id\", \"1\");\n>         doc1.addField(\"type_s\", \"up\");\n>         SolrInputDocument doc2 = new SolrInputDocument();\n>\n>         doc2.addField(\"id\", \"2\");\n>         doc2.addField(\"type_s\", \"down\");\n>\n>         doc1.addChildDocument(doc2);\n>\n>         SolrInputDocument doc4 = new SolrInputDocument();\n>         doc4.addField(\"id\", \"4\");\n>         doc4.addField(\"type_s\", \"up\");\n>\n>         SolrInputDocument doc5 = new SolrInputDocument();\n>         doc5.addField(\"id\", \"5\");\n>         doc5.addField(\"type_s\", \"down\");\n>\n>         doc4.addChildDocument(doc5);\n>\n>         try {\n>             client1.add(\"techproducts\", Arrays.asList(doc1,doc4));\n>         } catch (Exception e) {\n>             System.out.println(\"Indexing failed\" + e);\n>         }\n>     }\n>\n> If I start Solr 6.3 using bin/start start -e techproduct and ask the\n> following:\n>\n> http://localhost:8983/solr/techproducts/select?fl=*,[\n> child%20parentFilter=type_s:down]&fq=type_s:down&indent=on&q=*:*&wt=js\n> on\n>\n>\n> then I get:\n>\n>     {\n>       \"docs\": [\n>         {\n>           \"id\": \"2\",\n>           \"type_s\": \"down\"\n>         },\n>         {\n>           \"id\": \"5\",\n>           \"type_s\": \"down\",\n>           \"_childDocuments_\": [\n>             {\n>               \"id\": \"1\",\n>               \"type_s\": \"up\"\n>             }\n>           ]\n>         }\n>       ]\n>     }\n>\n> which seems to be a bug for me. Or did I miss something?\n> Notice that the relations \"2 is a child of 1\" and \"5 is a child of 4\" \n> are working fine. It's just that I get extra (unwanted and unrelated) relations.\n>\n> Notice that at some point I manage to get back two documents with the \n> __same__ id (with different version). I'm not able to reproduce this \n> but I guess it could be related.\n>\n> Fabien\n>\n>\n\n\n--\nSincerely yours\nMikhail Khludnev\n",
      "type": "Body",
      "meta": null
    }
  ],
  "meta": {},
  "id": "train/train_431"
}