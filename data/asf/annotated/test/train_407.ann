{
  "wrapper": "plaintext",
  "text": "I need to filter out outliers from a dataframe by all columns. I can\nmanually list all columns like:\n\ndf.filter(x=>math.abs(x.get(0).toString().toDouble-means(0))<=3*stddevs(0))\n\n    .filter(x=>math.abs(x.get(1).toString().toDouble-means(1))<=3*stddevs(1\n))\n\n    ...\n\nBut I want to turn it into a general function which can handle variable\nnumber of columns. How could I do that? Thanks in advance!\n\n\nRegards,\n\nShawn\n\n\n\n\n--\nView this message in context: http://apache-spark-user-list.1001560.n3.nabble.com/filter-rows-by-all-columns-tp28309.html\nSent from the Apache Spark User List mailing list archive at Nabble.com.\n",
  "denotations": [
    {
      "id": 1,
      "start": 400,
      "end": 417,
      "text": "\nRegards,\n\nShawn\n",
      "type": "Body/Outro",
      "meta": null
    },
    {
      "id": 2,
      "start": 0,
      "end": 619,
      "text": "I need to filter out outliers from a dataframe by all columns. I can\nmanually list all columns like:\n\ndf.filter(x=>math.abs(x.get(0).toString().toDouble-means(0))<=3*stddevs(0))\n\n    .filter(x=>math.abs(x.get(1).toString().toDouble-means(1))<=3*stddevs(1\n))\n\n    ...\n\nBut I want to turn it into a general function which can handle variable\nnumber of columns. How could I do that? Thanks in advance!\n\n\nRegards,\n\nShawn\n\n\n\n\n--\nView this message in context: http://apache-spark-user-list.1001560.n3.nabble.com/filter-rows-by-all-columns-tp28309.html\nSent from the Apache Spark User List mailing list archive at Nabble.com.\n",
      "type": "Body",
      "meta": null
    }
  ],
  "meta": {},
  "id": "test/train_407"
}