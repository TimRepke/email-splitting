{
  "wrapper": "text",
  "id": "test/train_4514",
  "meta": {},
  "text": "This code is not working:\n\n================\nfrom pyspark.ml.evaluation import RegressionEvaluator\nfrom pyspark.ml.recommendation import ALS, ALSModel\nfrom pyspark.sql import Row\n\nals = ALS(maxIter=10, regParam=0.01, userCol=\"user_id\", itemCol=\"movie_id\",\nratingCol=\"rating\")\nmodel = als.fit(training)\n\nmodel.save(\"/models/als\")\n\nmodel2 = ALSModel.load(\"/models/als\") # <-- error here\n=================\n\n\n\nGives rise to this error:\n=================\n\n---------------------------------------------------------------------------Py4JJavaError\n                            Traceback (most recent call\nlast)<ipython-input-24-c0454f47bb1d> in <module>()----> 1 m2 =\nALSModel.load(\"/models/als\")\n/usr/local/spark/python/pyspark/ml/util.py in load(cls, path)    251\n  def load(cls, path):    252         \"\"\"Reads an ML instance from the\ninput path, a shortcut of `read().load(path)`.\"\"\"--> 253\nreturn cls.read().load(path)    254     255\n/usr/local/spark/python/pyspark/ml/util.py in load(self, path)    192\n       if not isinstance(path, basestring):    193             raise\nTypeError(\"path should be a basestring, got type %s\" % type(path))-->\n194         java_obj = self._jread.load(path)    195         if not\nhasattr(self._clazz, \"_from_java\"):    196             raise\nNotImplementedError(\"This Java ML type cannot be loaded into Python\ncurrently: %r\"\n/usr/local/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py\nin __call__(self, *args)   1131         answer =\nself.gateway_client.send_command(command)   1132         return_value\n= get_return_value(-> 1133             answer, self.gateway_client,\nself.target_id, self.name)   1134    1135         for temp_arg in\ntemp_args:\n/usr/local/spark/python/pyspark/sql/utils.py in deco(*a, **kw)     61\n   def deco(*a, **kw):     62         try:---> 63             return\nf(*a, **kw)     64         except py4j.protocol.Py4JJavaError as e:\n 65             s = e.java_exception.toString()\n/usr/local/spark/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py in\nget_return_value(answer, gateway_client, target_id, name)    317\n          raise Py4JJavaError(    318                     \"An error\noccurred while calling {0}{1}{2}.\\n\".--> 319\nformat(target_id, \".\", name), value)    320             else:    321\n              raise Py4JError(\nPy4JJavaError: An error occurred while calling o337.load.\n: java.lang.UnsupportedOperationException: empty collection\n\tat org.apache.spark.rdd.RDD$$anonfun$first$1.apply(RDD.scala:1370)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:362)\n\tat org.apache.spark.rdd.RDD.first(RDD.scala:1367)\n\tat org.apache.spark.ml.util.DefaultParamsReader$.loadMetadata(ReadWrite.scala:379)\n\tat org.apache.spark.ml.recommendation.ALSModel$ALSModelReader.load(ALS.scala:317)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:280)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:214)\n\tat java.lang.Thread.run(Thread.java:748)\n\n=================\n\n",
  "denotations": [
    {
      "id": 1,
      "start": 0,
      "end": 3627,
      "text": "This code is not working:\n\n================\nfrom pyspark.ml.evaluation import RegressionEvaluator\nfrom pyspark.ml.recommendation import ALS, ALSModel\nfrom pyspark.sql import Row\n\nals = ALS(maxIter=10, regParam=0.01, userCol=\"user_id\", itemCol=\"movie_id\",\nratingCol=\"rating\")\nmodel = als.fit(training)\n\nmodel.save(\"/models/als\")\n\nmodel2 = ALSModel.load(\"/models/als\") # <-- error here\n=================\n\n\n\nGives rise to this error:\n=================\n\n---------------------------------------------------------------------------Py4JJavaError\n                            Traceback (most recent call\nlast)<ipython-input-24-c0454f47bb1d> in <module>()----> 1 m2 =\nALSModel.load(\"/models/als\")\n/usr/local/spark/python/pyspark/ml/util.py in load(cls, path)    251\n  def load(cls, path):    252         \"\"\"Reads an ML instance from the\ninput path, a shortcut of `read().load(path)`.\"\"\"--> 253\nreturn cls.read().load(path)    254     255\n/usr/local/spark/python/pyspark/ml/util.py in load(self, path)    192\n       if not isinstance(path, basestring):    193             raise\nTypeError(\"path should be a basestring, got type %s\" % type(path))-->\n194         java_obj = self._jread.load(path)    195         if not\nhasattr(self._clazz, \"_from_java\"):    196             raise\nNotImplementedError(\"This Java ML type cannot be loaded into Python\ncurrently: %r\"\n/usr/local/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py\nin __call__(self, *args)   1131         answer =\nself.gateway_client.send_command(command)   1132         return_value\n= get_return_value(-> 1133             answer, self.gateway_client,\nself.target_id, self.name)   1134    1135         for temp_arg in\ntemp_args:\n/usr/local/spark/python/pyspark/sql/utils.py in deco(*a, **kw)     61\n   def deco(*a, **kw):     62         try:---> 63             return\nf(*a, **kw)     64         except py4j.protocol.Py4JJavaError as e:\n 65             s = e.java_exception.toString()\n/usr/local/spark/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py in\nget_return_value(answer, gateway_client, target_id, name)    317\n          raise Py4JJavaError(    318                     \"An error\noccurred while calling {0}{1}{2}.\\n\".--> 319\nformat(target_id, \".\", name), value)    320             else:    321\n              raise Py4JError(\nPy4JJavaError: An error occurred while calling o337.load.\n: java.lang.UnsupportedOperationException: empty collection\n\tat org.apache.spark.rdd.RDD$$anonfun$first$1.apply(RDD.scala:1370)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:362)\n\tat org.apache.spark.rdd.RDD.first(RDD.scala:1367)\n\tat org.apache.spark.ml.util.DefaultParamsReader$.loadMetadata(ReadWrite.scala:379)\n\tat org.apache.spark.ml.recommendation.ALSModel$ALSModelReader.load(ALS.scala:317)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:280)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:214)\n\tat java.lang.Thread.run(Thread.java:748)\n\n=================\n\n",
      "type": "Body",
      "meta": null
    }
  ]
}